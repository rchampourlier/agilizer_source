#!/usr/bin/env ruby

# For each issue in JiraCache, not marked as deleted in JIRA
# (field `deleted_from_jira_at`), send a "fetched_issue" event
# to the Agilizer::Interface::Jira::Notifier so that
# the `Agilizer::Issue` gets updated.
#
# NB:
#   - Agilizer issues are not cleared before reprocessing.
#     Issues deleted from JIRA may not be deleted from Agilizer
#     in the process.
#   - No update is done on JiraCache stored issues.

# Load dependencies
require 'rubygems'
require 'bundler/setup'

$LOAD_PATH.unshift File.expand_path('../..', __FILE__)
require 'config/boot'

require 'agilizer'
require 'agilizer/issue'

logger = Logger.new(STDOUT)
logger.level = Logger::DEBUG

require 'jira_cache'
require 'agilizer/interface/jira'

t_start = Time.now

JiraCache::Issue.where(deleted_from_jira_at: nil).each do |cached_issue|
  notifier = Agilizer::Interface::Jira::Notifier.new(logger: logger)
  event_data = {
    key: cached_issue.key,
    data: cached_issue.data
  }
  notifier.publish 'fetched_issue', event_data
end

logger.info "process_cache finished in #{Time.now - t_start}s"
