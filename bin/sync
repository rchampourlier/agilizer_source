#!/usr/bin/env ruby

# Fetches new and updated issues from the sources,
# processes them and saves them as `Agilizer::Issue`
# records.
#
# Usage:
#     bin/sync

# Load dependencies
require 'rubygems'
require 'bundler/setup'

$LOAD_PATH.unshift File.expand_path('../..', __FILE__)
require 'config/boot'

logger = Logger.new(STDOUT)
logger.level = Logger.const_get(ENV['JIRA_LOG_LEVEL'].to_sym)

require 'agilizer/interface/jira'
Agilizer::Interface::Jira.import_project(ENV['JIRA_PROJECT_KEY'],
  domain: ENV['JIRA_DOMAIN'],
  username: ENV['JIRA_USERNAME'],
  password: ENV['JIRA_PASSWORD'],
  logger: logger)

# Cleanup issues deleted from JIRA
require 'jira_cache/issue'
deleted_issue_keys = JiraCache::Issue.where(:deleted_from_jira_at => { :$ne => nil }).map(&:key)
Agilizer::Issue.where(:identifier => { :$in => deleted_issue_keys }).destroy_all
logger.info "Deleted Agilizer::Issue for identifiers #{deleted_issue_keys}"
