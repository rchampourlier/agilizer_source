#!/usr/bin/env ruby

# For each issue in JiraCache, not marked as deleted in JIRA
# (field `deleted_from_jira_at`), send a "fetched_issue" event
# to the Agilizer::Interface::JIRA::Notifier so that
# the Agilizer"s Issue record gets updated.
#
# NB:
#   - Agilizer issues are not cleared before reprocessing.
#     Issues deleted from JIRA may not be deleted from Agilizer
#     in the process.
#   - No update is done on JiraCache stored issues.

# Load dependencies
require "rubygems"
require "bundler/setup"
require "logger"

$LOAD_PATH.unshift File.expand_path("../..", __FILE__)
require "config/boot"

logger = Logger.new(STDOUT)
logger.level = Logger::INFO

require "jira_cache/data/issue_repository"
require "agilizer/interface/jira"
require "agilizer/data/issue_repository"

t_start = Time.now

notifier = Agilizer::Interface::JIRA::Notifier.new
keys = JiraCache::Data::IssueRepository.keys_for_non_deleted_issues
keys.each do |key|
  logger.info "process issue with key: #{key}"
  data = JiraCache::Data::IssueRepository.find_by_key(key)[:data]
  event_data = {
    key: key,
    data: data.to_h
  }
  notifier.publish :fetched_issue, event_data
end

logger.info "process_cache finished in #{Time.now - t_start}s"
